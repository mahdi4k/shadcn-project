import type { Metadata } from "next";
import { Geist, Geist_Mono, Vazirmatn } from "next/font/google";
import { NextIntlClientProvider } from "next-intl";

import "../globals.css";
import DirectionWrapper from "@/components/direction-wrapper";
import { ThemeProvider } from "@/components/theme-provider";
import AppHydrationLoader from "@/components/app-hydration-loader";
import { LoaderProvider } from "@/components/loader-context";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const vazir = Vazirmatn({
  variable: "--font-vazir",
  subsets: ["arabic", "latin"],
  adjustFontFallback: true,
  display: "swap",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function LocaleLayout({
  children,
  params,
}: {
  children: React.ReactNode;
  params: Promise<{ locale: string }>; // ðŸ”¥ params is a Promise!
}) {
  const { locale } = await params; // âœ… await it

  const messages = await import(`@/messages/${locale}.json`).then((mod) => mod.default);

  return (
    <html lang={locale} suppressHydrationWarning>
      <body
        className={`antialiased ${
          locale === "fa" ? `${vazir.variable} font-vazir` : `${geistSans.variable} ${geistMono.variable} font-geist`
        }`}
      >
        <NextIntlClientProvider locale={locale} messages={messages}>
          <DirectionWrapper>
            <ThemeProvider attribute="class" defaultTheme="system" enableSystem disableTransitionOnChange>
              <LoaderProvider>
                <AppHydrationLoader>{children}</AppHydrationLoader>
              </LoaderProvider>
            </ThemeProvider>
          </DirectionWrapper>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
